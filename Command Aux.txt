****************‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á refesh‡πÅ‡∏•‡∏∞build‡πÉ‡∏´‡∏°‡πà************
docker compose down # ‡∏´‡∏¢‡∏∏‡∏î container ‡πÄ‡∏î‡∏¥‡∏°
docker compose build --no-cache
docker compose up -d
docker compose logs -f web # ‡∏î‡∏π‡∏ß‡πà‡∏≤ callback ‡πÑ‡∏°‡πà‡∏°‡∏µ Traceback
************************************************************
‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏Å‡∏±‡∏ö GitHub
1. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå + ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå
mkdir my-new-app
cd my-new-app
2. ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô Git Repository
git init
3. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå .gitignore (‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Python)
echo __pycache__/ > .gitignore
echo *.pyc >> .gitignore
echo *.log >> .gitignore
echo *.env >> .gitignore
4. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
echo "# My New App" > README.md
5. Add + Commit ‡πÑ‡∏ü‡∏•‡πå
git add .
git commit -m "Initial commit"
6. ‡∏™‡∏£‡πâ‡∏≤‡∏á Repository ‡πÉ‡∏´‡∏°‡πà‡∏ö‡∏ô GitHub
‡πÑ‡∏õ‡∏ó‡∏µ‡πà https://github.com/new ‚Üí ‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠ repo ‚Üí ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Private ‡∏´‡∏£‡∏∑‡∏≠ Public ‚Üí ‡∏Å‡∏î "Create repository"
7. ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° repo GitHub ‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ö local
‡∏™‡∏°‡∏°‡∏∏‡∏ï‡∏¥‡∏ß‡πà‡∏≤ URL ‡∏Ç‡∏≠‡∏á GitHub ‡∏Ñ‡∏∑‡∏≠: https://github.com/yourname/my-new-app.git
git remote add origin https://github.com/yourname/my-new-app.git
git branch -M main
git push -u origin main
üîÅ ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ (‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å clone ‡∏´‡∏£‡∏∑‡∏≠‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ï‡πà‡∏≠)
‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ‡∏ï‡∏≤‡∏° workflow:
git add .
git commit -m "‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏¢‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ"
git push

‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ä‡πâ VS Code ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡∏à‡∏∞‡∏ó‡∏≥‡∏ú‡πà‡∏≤‡∏ô UI ‡∏Å‡πá‡πÑ‡∏î‡πâ‡πÄ‡∏ä‡πà‡∏ô‡∏Å‡∏±‡∏ô
‡πÅ‡∏ï‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡∏ù‡∏∂‡∏Å‡πÉ‡∏ä‡πâ command line ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÑ‡∏î‡πâ‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏ß‡πà‡∏≤ üëç
‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ template .gitignore ‡πÅ‡∏ö‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞ Python ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏∑‡πà‡∏ô ‡πÜ ‡∏ö‡∏≠‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏î‡πâ‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö
************************************************************
git rm -r --cached . #‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà Git ‡πÄ‡∏Ñ‡∏¢ track ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å staging ‡πÅ‡∏ï‡πà ‡πÑ‡∏°‡πà‡∏•‡∏ö‡∏à‡∏≤‡∏Å‡∏î‡∏¥‡∏™‡∏Å‡πå

git add . #‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤ staging ‡∏ï‡∏≤‡∏° .gitignore ‡∏ï‡∏±‡∏ß‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î

git commit #‡∏™‡∏£‡πâ‡∏≤‡∏á commit ‡πÉ‡∏´‡∏°‡πà

git push #‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï repo ‡πÉ‡∏´‡πâ‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡∏ö‡∏ô GitHub
************************************************************
git switch -c Test/ui
#switch -c = create ‡πÅ‡∏•‡πâ‡∏ß checkout
#Test/ui = ‡∏ä‡∏∑‡πà‡∏≠ branch (‡∏ï‡∏≤‡∏° convention ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö feature)

git add .
git commit -m "feat: ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å Excel" 
#-m = ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á commit ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ß‡πà‡∏≤"feat: ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å Excel" ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡∏¥‡∏î editor
git push -u origin Test/ui 
#Push branch ‡∏ô‡∏µ‡πâ‡∏Ç‡∏∂‡πâ‡∏ô GitHub (‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ -u)
#-u = ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ default ‡πÉ‡∏´‡πâ branch ‡∏ô‡∏µ‡πâ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏Å‡∏±‡∏ö GitHub
#‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡πÅ‡∏Ñ‡πà git push ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢

# ‡∏ß‡∏¥‡∏ò‡∏µ tag (‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ñ‡∏∂‡∏á‡∏à‡∏∏‡∏î stable):
git tag -a v1.0.0 -m "Stable version with export feature"
git push origin v1.0.0
******************************************************************
# ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏£‡∏ß‡∏° commit ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å Test/ui ‡πÄ‡∏Ç‡πâ‡∏≤ main ‡πÅ‡∏•‡∏∞‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡πâ‡∏≠‡∏ô‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÑ‡∏î‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
# 1. ‡∏™‡∏•‡∏±‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà main
git switch main
# 2. ‡∏î‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏à‡∏≤‡∏Å Test/ui ‡∏°‡∏≤‡∏£‡∏ß‡∏° (merge)
git merge Test/ui
# 3. ‡∏à‡∏≤‡∏Å‡∏ô‡∏±‡πâ‡∏ô push ‡∏Ç‡∏∂‡πâ‡∏ô GitHub
git push
# (‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å tag stable version ‡πÉ‡∏´‡∏°‡πà ‡πÄ‡∏ä‡πà‡∏ô v1.0.2)
# ‡∏´‡∏•‡∏±‡∏á merge ‡πÅ‡∏•‡πâ‡∏ß:
git tag -a v1.0.2 -m "First stable version from Test/ui"
git push origin v1.0.2

# ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏£‡∏£‡∏π‡πâ:
# git merge ‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏•‡∏ö branch Test/ui ‡∏≠‡∏≠‡∏Å
# ‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÉ‡∏ô Test/ui ‡∏ï‡πà‡∏≠ ‡πÅ‡∏•‡πâ‡∏ß merge ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï‡πÑ‡∏î‡πâ
******************************************************************
# ‡∏™‡∏•‡∏±‡∏öBranch:
git switch Test/ui
# ‡∏™‡∏£‡πâ‡∏≤‡∏áBranch ‡πÉ‡∏´‡∏°‡πà ‡πÇ‡∏î‡∏¢‡∏™‡∏∑‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏à‡∏≤‡∏ÅTest/ui (‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πàBranch‡∏¢‡πà‡∏≠‡∏¢):
git switch -c feature/new-filter
# ‡∏ß‡∏¥‡∏ò‡∏µ‡∏î‡∏π branch ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:
git branch -a
# Git ‡πÑ‡∏°‡πà‡∏°‡∏µ "branch ‡∏¢‡πà‡∏≠‡∏¢" ‡∏à‡∏£‡∏¥‡∏á ‡πÜ ‡πÅ‡∏ö‡∏ö directory
# ‡πÅ‡∏ï‡πà‡∏°‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á branch ‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà (‡πÄ‡∏ä‡πà‡∏ô Test/ui)
# ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠ feature/... ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏µ‡∏¢‡∏á convention ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏î‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö‡πÉ‡∏´‡πâ‡∏î‡∏π‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢
git tag   # ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠ tag ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
# ‡∏•‡∏ö tag ‡πÄ‡∏î‡∏¥‡∏°
git tag -d v0.01 # ‡∏•‡∏ö‡πÉ‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á
git push origin :refs/tags/v0.01 # ‡∏•‡∏ö‡∏ö‡∏ô GitHub / remote
# ‡∏™‡∏£‡πâ‡∏≤‡∏á & push tag ‡πÉ‡∏´‡∏°‡πà
git tag -a v1.0.1 -m "Stable version 1.0.1"
git push origin v1.0.1
# ‡∏î‡∏π tag ‡∏à‡∏£‡∏¥‡∏á‡∏ö‡∏ô‡∏£‡∏µ‡πÇ‡∏°‡∏ï
git ls-remote --tags origin
# ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÄ‡∏´‡πá‡∏ô V1.0.2 ‡∏´‡∏£‡∏∑‡∏≠ v1.0.2 ‡∏≠‡∏¢‡∏π‡πà
git push --delete origin V1.0.2     # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ï‡∏±‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏•‡πá‡∏Å/‡πÉ‡∏´‡∏ç‡πà‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á
*************************************************************************
#‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏á‡∏≤‡∏ô stash
git stash list                      # ‡∏î‡∏π‡∏Å‡πà‡∏≠‡∏ô‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏µ‡πà stash
git stash drop stash@{0}           # ‡∏•‡∏ö stash ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏£‡∏Å (‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏•‡∏Ç‡πÑ‡∏î‡πâ)
git stash clear                    # ‡∏•‡πâ‡∏≤‡∏á stash ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
#‡πÄ‡∏≠‡∏≤‡∏á‡∏≤‡∏ô‡∏à‡∏≤‡∏Å stash ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤ 
git stash pop                      # ‡∏î‡∏∂‡∏á stash ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤ + ‡∏•‡∏ö‡∏°‡∏±‡∏ô
git stash pop stash@{0}            # ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏´‡∏•‡∏≤‡∏¢‡∏≠‡∏±‡∏ô ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏£‡∏£‡∏∞‡∏ß‡∏±‡∏á: ‡∏ñ‡πâ‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà stash ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤ ‡∏ä‡∏ô‡∏Å‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô ‡∏≠‡∏≤‡∏à‡πÄ‡∏Å‡∏¥‡∏î conflict ‡πÑ‡∏î‡πâ (Git ‡∏à‡∏∞‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏Å‡πâ)
*************************************************************************
# ‡∏Å‡πà‡∏≠‡∏ô‡∏¢‡πâ‡∏≤‡∏¢ Tag
# ‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà Test/ui
git add .
git commit -m "Edit Command Aux.txt V1"
git push origin Test/ui
git switch main
git merge Test/ui
git push origin main
# ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏¢‡πâ‡∏≤‡∏¢ Tag
git tag -a -f v1.0.3 -m "Stable version Basic v1.0.3" # ‡∏¢‡πâ‡∏≤‡∏¢ tag v1.0.3 ‡∏°‡∏≤‡∏ó‡∏µ‡πà commit ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
 
git --no-pager show v1.0.3  # ‡πÄ‡∏ä‡πá‡∏Å‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
**************************************************************
